<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="ShaderCompilerCore"#>


public class <#=ShaderName#> : MaterialBase
{
	public <#=ShaderName#>() 
	 : base (GetVSSourceCode(), GetFSSourceCode(), GetGSSourceCode())
	{	
	}

	public ShaderProgram GetProgramObject()
	{
		return mMaterialProgram;
	}

	public void Use()
	{
		mMaterialProgram.UseProgram();
	}

<# int index = 0;
foreach(var Sampler in mShaderProgram.GetSampler2DNames())
{	
#>
	public void Set<#=Sampler#>2D(Core.Texture.TextureBase TextureObject)
	{
		SetTexture(@"<#=Sampler#>", TextureObject);
	}

	public void Set<#=Sampler#>2D(Core.Texture.TextureBase textureObject, Sampler samplerObject)
	{
		SetTexture(@"<#=Sampler#>", textureObject, samplerObject);		
	}

	public TextureBase <#=Sampler.FirstCharToUpper()#>2D 
	{	
		set => SetTexture(@"<#=Sampler#>", value);		
	}

	public TextureBase <#=Sampler.FirstCharToUpper()#>2D_PointSample
	{	
		set => SetTexture(@"<#=Sampler#>", value, Sampler.DefaultPointSampler);
	}

	public TextureBase <#=Sampler.FirstCharToUpper()#>2D_LinearSample
	{	
		set => SetTexture(@"<#=Sampler#>", value, Sampler.DefaultLinearSampler);
	}	
<#index++;#>
<#}#>

<#foreach(var item in mShaderProgram.GetActiveUniformVariableMetaDataList())#>
<#{#>
<#if(item.IsArray)#>
<#{#>
	public <#=item.VariableTypeString#>[] <#=item.VariableName.FirstCharToUpper()#>
	{
		get { return <#=item.VariableName.ToLower()#>; }
		set 
		{
			<#=item.VariableName.ToLower()#> = value;
			SetUniformVariable(@"<#=item.VariableName#>", <#=item.VariableName.ToLower()#>);			
		}
	}
	private <#=item.VariableTypeString#>[] <#=item.VariableName.ToLower()#>;
<#}#>
<#else#>
<#{#>
	public <#=item.VariableTypeString#> <#=item.VariableName.FirstCharToUpper()#>
	{
		get { return <#=item.VariableName.ToLower()#>; }
		set 
		{
			<#=item.VariableName.ToLower()#> = value;
			SetUniformVariable(@"<#=item.VariableName#>", <#=item.VariableName.ToLower()#>);			
		}
	}
	private <#=item.VariableTypeString#> <#=item.VariableName.ToLower()#>;
<#}#>
<#}#>

<#var BlockNameList = new List<string>();#>

<#for(int i = 0; i < mShaderProgram.GetActiveUniformBlockCount(); ++i)
{
    var blockname = mShaderProgram.GetUniformBlockName(i);
	BlockNameList.Add(blockname);
#>
    private <#=blockname#> <#=blockname.ToLower()#> = new <#=blockname#>();
	public <#=blockname#> <#=blockname#>
	{
		get { return <#=blockname.ToLower()#>; }
		set 
		{ 
			<#=blockname.ToLower()#> = value; 
			this.SetUniformBufferValue< <#=blockname#> >(@"<#=blockname#>", value);
		}
	}

<# var MetaDataList = mShaderProgram.GetUniformVariableMetaDataListInBlock(i).OrderBy(x => x.VariableOffset).ToList();#>
<# foreach(var data in MetaDataList) #>
<# { #>
	public <#=data.VariableTypeString#> <#=blockname#>_<#=data.VariableName.FirstCharToUpper()#>
	{
		get { return <#=blockname.ToLower()#>.<#=data.VariableName#> ; }
		set 
		{ 
			<#=blockname.ToLower()#>.<#=data.VariableName#> = value;
			this.SetUniformBufferValue< <#=blockname#> >(@"<#=blockname#>", <#=blockname.ToLower()#>);
		}
	}
<# } #>
<#}#>


	public static string GetVSSourceCode()
	{
		return @"<#=VSSourceCode#>";
	}

	public static string GetFSSourceCode()
	{
		return @"<#=FSSourceCode#>";
	}

	public static string GetGSSourceCode()
	{
		return @"<#=GSSourceCode#>";
	}
}